/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_mdx_search_mjs"],{

/***/ "?5206":
/*!********************************!*\
  !*** worker_threads (ignored) ***!
  \********************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js":
/*!**********************************************************************!*\
  !*** ./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n__webpack_require__.r(__webpack_exports__);\n/**!\r\n * FlexSearch.js v0.7.41 (Bundle.module)\r\n * Author and Copyright: Thomas Wilkerling\r\n * Licence: Apache-2.0\r\n * Hosted by Nextapps GmbH\r\n * https://github.com/nextapps-de/flexsearch\r\n */\nvar t;function u(a){return\"undefined\"!==typeof a?a:!0}function v(a){const b=Array(a);for(let c=0;c<a;c++)b[c]=x();return b}function x(){return Object.create(null)}function aa(a,b){return b.length-a.length}function C(a){return\"string\"===typeof a}function D(a){return\"object\"===typeof a}function E(a){return\"function\"===typeof a};function F(a,b){var c=ba;if(a&&(b&&(a=G(a,b)),this.H&&(a=G(a,this.H)),this.J&&1<a.length&&(a=G(a,this.J)),c||\"\"===c)){b=a.split(c);if(this.filter){a=this.filter;c=b.length;const d=[];for(let e=0,f=0;e<c;e++){const h=b[e];h&&!a[h]&&(d[f++]=h)}a=d}else a=b;return a}return a}const ba=/[\\p{Z}\\p{S}\\p{P}\\p{C}]+/u,ca=/[\\u0300-\\u036f]/g;\nfunction I(a,b){const c=Object.keys(a),d=c.length,e=[];let f=\"\",h=0;for(let g=0,k,m;g<d;g++)k=c[g],(m=a[k])?(e[h++]=J(b?\"(?!\\\\b)\"+k+\"(\\\\b|_)\":k),e[h++]=m):f+=(f?\"|\":\"\")+k;f&&(e[h++]=J(b?\"(?!\\\\b)(\"+f+\")(\\\\b|_)\":\"(\"+f+\")\"),e[h]=\"\");return e}function G(a,b){for(let c=0,d=b.length;c<d&&(a=a.replace(b[c],b[c+1]),a);c+=2);return a}function J(a){return new RegExp(a,\"g\")}function da(a){let b=\"\",c=\"\";for(let d=0,e=a.length,f;d<e;d++)(f=a[d])!==c&&(b+=c=f);return b};var fa={encode:ea,F:!1,G:\"\"};function ea(a){return F.call(this,(\"\"+a).toLowerCase(),!1)};const ha={},K={};function ia(a){L(a,\"add\");L(a,\"append\");L(a,\"search\");L(a,\"update\");L(a,\"remove\")}function L(a,b){a[b+\"Async\"]=function(){const c=this,d=arguments;var e=d[d.length-1];let f;E(e)&&(f=e,delete d[d.length-1]);e=new Promise(function(h){setTimeout(function(){c.async=!0;const g=c[b].apply(c,d);c.async=!1;h(g)})});return f?(e.then(f),this):e}};function ja(a,b,c,d){const e=a.length;let f=[],h,g,k=0;d&&(d=[]);for(let m=e-1;0<=m;m--){const n=a[m],w=n.length,q=x();let r=!h;for(let l=0;l<w;l++){const p=n[l],A=p.length;if(A)for(let B=0,z,y;B<A;B++)if(y=p[B],h){if(h[y]){if(!m)if(c)c--;else if(f[k++]=y,k===b)return f;if(m||d)q[y]=1;r=!0}if(d&&(z=(g[y]||0)+1,g[y]=z,z<e)){const H=d[z-2]||(d[z-2]=[]);H[H.length]=y}}else q[y]=1}if(d)h||(g=q);else if(!r)return[];h=q}if(d)for(let m=d.length-1,n,w;0<=m;m--){n=d[m];w=n.length;for(let q=0,r;q<w;q++)if(r=\nn[q],!h[r]){if(c)c--;else if(f[k++]=r,k===b)return f;h[r]=1}}return f}function ka(a,b){const c=x(),d=x(),e=[];for(let f=0;f<a.length;f++)c[a[f]]=1;for(let f=0,h;f<b.length;f++){h=b[f];for(let g=0,k;g<h.length;g++)k=h[g],c[k]&&!d[k]&&(d[k]=1,e[e.length]=k)}return e};function M(a){this.l=!0!==a&&a;this.cache=x();this.h=[]}function la(a,b,c){D(a)&&(a=a.query);let d=this.cache.get(a);d||(d=this.search(a,b,c),this.cache.set(a,d));return d}M.prototype.set=function(a,b){if(!this.cache[a]){var c=this.h.length;c===this.l?delete this.cache[this.h[c-1]]:c++;for(--c;0<c;c--)this.h[c]=this.h[c-1];this.h[0]=a}this.cache[a]=b};M.prototype.get=function(a){const b=this.cache[a];if(this.l&&b&&(a=this.h.indexOf(a))){const c=this.h[a-1];this.h[a-1]=this.h[a];this.h[a]=c}return b};const na={memory:{charset:\"latin:extra\",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:\"latin:extra\",G:\"reverse\"},score:{charset:\"latin:advanced\",D:20,B:3,context:{depth:3,D:9}},\"default\":{}};function oa(a,b,c,d,e,f,h,g){setTimeout(function(){const k=a(c?c+\".\"+d:d,JSON.stringify(h));k&&k.then?k.then(function(){b.export(a,b,c,e,f+1,g)}):b.export(a,b,c,e,f+1,g)})};function N(a,b){if(!(this instanceof N))return new N(a);var c;if(a){C(a)?a=na[a]:(c=a.preset)&&(a=Object.assign({},c[c],a));c=a.charset;var d=a.lang;C(c)&&(-1===c.indexOf(\":\")&&(c+=\":default\"),c=K[c]);C(d)&&(d=ha[d])}else a={};let e,f,h=a.context||{};this.encode=a.encode||c&&c.encode||ea;this.register=b||x();this.D=e=a.resolution||9;this.G=b=c&&c.G||a.tokenize||\"strict\";this.depth=\"strict\"===b&&h.depth;this.l=u(h.bidirectional);this.s=f=u(a.optimize);this.m=u(a.fastupdate);this.B=a.minlength||1;this.C=\na.boost;this.map=f?v(e):x();this.A=e=h.resolution||1;this.h=f?v(e):x();this.F=c&&c.F||a.rtl;this.H=(b=a.matcher||d&&d.H)&&I(b,!1);this.J=(b=a.stemmer||d&&d.J)&&I(b,!0);if(c=b=a.filter||d&&d.filter){c=b;d=x();for(let g=0,k=c.length;g<k;g++)d[c[g]]=1;c=d}this.filter=c;this.cache=(b=a.cache)&&new M(b)}t=N.prototype;t.append=function(a,b){return this.add(a,b,!0)};\nt.add=function(a,b,c,d){if(b&&(a||0===a)){if(!d&&!c&&this.register[a])return this.update(a,b);b=this.encode(b);if(d=b.length){const m=x(),n=x(),w=this.depth,q=this.D;for(let r=0;r<d;r++){let l=b[this.F?d-1-r:r];var e=l.length;if(l&&e>=this.B&&(w||!n[l])){var f=O(q,d,r),h=\"\";switch(this.G){case \"full\":if(2<e){for(f=0;f<e;f++)for(var g=e;g>f;g--)if(g-f>=this.B){var k=O(q,d,r,e,f);h=l.substring(f,g);P(this,n,h,k,a,c)}break}case \"reverse\":if(1<e){for(g=e-1;0<g;g--)h=l[g]+h,h.length>=this.B&&P(this,n,\nh,O(q,d,r,e,g),a,c);h=\"\"}case \"forward\":if(1<e){for(g=0;g<e;g++)h+=l[g],h.length>=this.B&&P(this,n,h,f,a,c);break}default:if(this.C&&(f=Math.min(f/this.C(b,l,r)|0,q-1)),P(this,n,l,f,a,c),w&&1<d&&r<d-1)for(e=x(),h=this.A,f=l,g=Math.min(w+1,d-r),e[f]=1,k=1;k<g;k++)if((l=b[this.F?d-1-r-k:r+k])&&l.length>=this.B&&!e[l]){e[l]=1;const p=this.l&&l>f;P(this,m,p?f:l,O(h+(d/2>h?0:1),d,r,g-1,k-1),a,c,p?l:f)}}}}this.m||(this.register[a]=1)}}return this};\nfunction O(a,b,c,d,e){return c&&1<a?b+(d||0)<=a?c+(e||0):(a-1)/(b+(d||0))*(c+(e||0))+1|0:0}function P(a,b,c,d,e,f,h){let g=h?a.h:a.map;if(!b[c]||h&&!b[c][h])a.s&&(g=g[d]),h?(b=b[c]||(b[c]=x()),b[h]=1,g=g[h]||(g[h]=x())):b[c]=1,g=g[c]||(g[c]=[]),a.s||(g=g[d]||(g[d]=[])),f&&g.includes(e)||(g[g.length]=e,a.m&&(a=a.register[e]||(a.register[e]=[]),a[a.length]=g))}\nt.search=function(a,b,c){c||(!b&&D(a)?(c=a,a=c.query):D(b)&&(c=b));let d=[],e;let f,h=0;if(c){a=c.query||a;b=c.limit;h=c.offset||0;var g=c.context;f=c.suggest}if(a&&(a=this.encode(\"\"+a),e=a.length,1<e)){c=x();var k=[];for(let n=0,w=0,q;n<e;n++)if((q=a[n])&&q.length>=this.B&&!c[q])if(this.s||f||this.map[q])k[w++]=q,c[q]=1;else return d;a=k;e=a.length}if(!e)return d;b||(b=100);g=this.depth&&1<e&&!1!==g;c=0;let m;g?(m=a[0],c=1):1<e&&a.sort(aa);for(let n,w;c<e;c++){w=a[c];g?(n=pa(this,d,f,b,h,2===e,w,\nm),f&&!1===n&&d.length||(m=w)):n=pa(this,d,f,b,h,1===e,w);if(n)return n;if(f&&c===e-1){k=d.length;if(!k){if(g){g=0;c=-1;continue}return d}if(1===k)return qa(d[0],b,h)}}return ja(d,b,h,f)};\nfunction pa(a,b,c,d,e,f,h,g){let k=[],m=g?a.h:a.map;a.s||(m=ra(m,h,g,a.l));if(m){let n=0;const w=Math.min(m.length,g?a.A:a.D);for(let q=0,r=0,l,p;q<w;q++)if(l=m[q])if(a.s&&(l=ra(l,h,g,a.l)),e&&l&&f&&(p=l.length,p<=e?(e-=p,l=null):(l=l.slice(e),e=0)),l&&(k[n++]=l,f&&(r+=l.length,r>=d)))break;if(n){if(f)return qa(k,d,0);b[b.length]=k;return}}return!c&&k}function qa(a,b,c){a=1===a.length?a[0]:[].concat.apply([],a);return c||a.length>b?a.slice(c,c+b):a}\nfunction ra(a,b,c,d){c?(d=d&&b>c,a=(a=a[d?b:c])&&a[d?c:b]):a=a[b];return a}t.contain=function(a){return!!this.register[a]};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a,b){const c=this.register[a];if(c){if(this.m)for(let d=0,e;d<c.length;d++)e=c[d],e.splice(e.indexOf(a),1);else Q(this.map,a,this.D,this.s),this.depth&&Q(this.h,a,this.A,this.s);b||delete this.register[a];if(this.cache){b=this.cache;for(let d=0,e,f;d<b.h.length;d++)f=b.h[d],e=b.cache[f],e.includes(a)&&(b.h.splice(d--,1),delete b.cache[f])}}return this};\nfunction Q(a,b,c,d,e){let f=0;if(a.constructor===Array)if(e)b=a.indexOf(b),-1!==b?1<a.length&&(a.splice(b,1),f++):f++;else{e=Math.min(a.length,c);for(let h=0,g;h<e;h++)if(g=a[h])f=Q(g,b,c,d,e),d||f||delete a[h]}else for(let h in a)(f=Q(a[h],b,c,d,e))||delete a[h];return f}t.searchCache=la;\nt.export=function(a,b,c,d,e,f){let h=!0;\"undefined\"===typeof f&&(h=new Promise(m=>{f=m}));let g,k;switch(e||(e=0)){case 0:g=\"reg\";if(this.m){k=x();for(let m in this.register)k[m]=1}else k=this.register;break;case 1:g=\"cfg\";k={doc:0,opt:this.s?1:0};break;case 2:g=\"map\";k=this.map;break;case 3:g=\"ctx\";k=this.h;break;default:\"undefined\"===typeof c&&f&&f();return}oa(a,b||this,c,g,d,e,k,f);return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"cfg\":this.s=!!b.opt;break;case \"reg\":this.m=!1;this.register=b;break;case \"map\":this.map=b;break;case \"ctx\":this.h=b}};ia(N.prototype);function sa(a){a=a.data;var b=self._index;const c=a.args;var d=a.task;switch(d){case \"init\":d=a.options||{};a=a.factory;b=d.encode;d.cache=!1;b&&0===b.indexOf(\"function\")&&(d.encode=Function(\"return \"+b)());a?(Function(\"return \"+a)()(self),self._index=new self.FlexSearch.Index(d),delete self.FlexSearch):self._index=new N(d);break;default:a=a.id,b=b[d].apply(b,c),postMessage(\"search\"===d?{id:a,msg:b}:{id:a})}};let ta=0;function S(a){if(!(this instanceof S))return new S(a);var b;a?E(b=a.encode)&&(a.encode=b.toString()):a={};(b=(self||window)._factory)&&(b=b.toString());const c=\"undefined\"===typeof window&&self.exports,d=this;this.o=ua(b,c,a.worker);this.h=x();if(this.o){if(c)this.o.on(\"message\",function(e){d.h[e.id](e.msg);delete d.h[e.id]});else this.o.onmessage=function(e){e=e.data;d.h[e.id](e.msg);delete d.h[e.id]};this.o.postMessage({task:\"init\",factory:b,options:a})}}T(\"add\");T(\"append\");T(\"search\");\nT(\"update\");T(\"remove\");function T(a){S.prototype[a]=S.prototype[a+\"Async\"]=function(){const b=this,c=[].slice.call(arguments);var d=c[c.length-1];let e;E(d)&&(e=d,c.splice(c.length-1,1));d=new Promise(function(f){setTimeout(function(){b.h[++ta]=f;b.o.postMessage({task:a,id:ta,args:c})})});return e?(d.then(e),this):d}}\nfunction ua(a,b,c){let d;try{d=b?new ((__webpack_require__(/*! worker_threads */ \"?5206\").Worker))(__dirname + \"/node/node.js\"):a?new Worker(URL.createObjectURL(new Blob([\"onmessage=\"+sa.toString()],{type:\"text/javascript\"}))):new Worker(C(c)?c:\"worker/worker.js\",{type:\"module\"})}catch(e){}return d};function U(a){if(!(this instanceof U))return new U(a);var b=a.document||a.doc||a,c;this.K=[];this.h=[];this.A=[];this.register=x();this.key=(c=b.key||b.id)&&V(c,this.A)||\"id\";this.m=u(a.fastupdate);this.C=(c=b.store)&&!0!==c&&[];this.store=c&&x();this.I=(c=b.tag)&&V(c,this.A);this.l=c&&x();this.cache=(c=a.cache)&&new M(c);a.cache=!1;this.o=a.worker;this.async=!1;c=x();let d=b.index||b.field||b;C(d)&&(d=[d]);for(let e=0,f,h;e<d.length;e++)f=d[e],C(f)||(h=f,f=f.field),h=D(h)?Object.assign({},a,h):a,\nthis.o&&(c[f]=new S(h),c[f].o||(this.o=!1)),this.o||(c[f]=new N(h,this.register)),this.K[e]=V(f,this.A),this.h[e]=f;if(this.C)for(a=b.store,C(a)&&(a=[a]),b=0;b<a.length;b++)this.C[b]=V(a[b],this.A);this.index=c}function V(a,b){const c=a.split(\":\");let d=0;for(let e=0;e<c.length;e++)a=c[e],0<=a.indexOf(\"[]\")&&(a=a.substring(0,a.length-2))&&(b[d]=!0),a&&(c[d++]=a);d<c.length&&(c.length=d);return 1<d?c:c[0]}function X(a,b){if(C(b))a=a[b];else for(let c=0;a&&c<b.length;c++)a=a[b[c]];return a}\nfunction Y(a,b,c,d,e){a=a[e];if(d===c.length-1)b[e]=a;else if(a)if(a.constructor===Array)for(b=b[e]=Array(a.length),e=0;e<a.length;e++)Y(a,b,c,d,e);else b=b[e]||(b[e]=x()),e=c[++d],Y(a,b,c,d,e)}function Z(a,b,c,d,e,f,h,g){if(a=a[h])if(d===b.length-1){if(a.constructor===Array){if(c[d]){for(b=0;b<a.length;b++)e.add(f,a[b],!0,!0);return}a=a.join(\" \")}e.add(f,a,g,!0)}else if(a.constructor===Array)for(h=0;h<a.length;h++)Z(a,b,c,d,e,f,h,g);else h=b[++d],Z(a,b,c,d,e,f,h,g)}t=U.prototype;\nt.add=function(a,b,c){D(a)&&(b=a,a=X(b,this.key));if(b&&(a||0===a)){if(!c&&this.register[a])return this.update(a,b);for(let d=0,e,f;d<this.h.length;d++)f=this.h[d],e=this.K[d],C(e)&&(e=[e]),Z(b,e,this.A,0,this.index[f],a,e[0],c);if(this.I){let d=X(b,this.I),e=x();C(d)&&(d=[d]);for(let f=0,h,g;f<d.length;f++)if(h=d[f],!e[h]&&(e[h]=1,g=this.l[h]||(this.l[h]=[]),!c||!g.includes(a)))if(g[g.length]=a,this.m){const k=this.register[a]||(this.register[a]=[]);k[k.length]=g}}if(this.store&&(!c||!this.store[a])){let d;\nif(this.C){d=x();for(let e=0,f;e<this.C.length;e++)f=this.C[e],C(f)?d[f]=b[f]:Y(b,d,f,0,f[0])}this.store[a]=d||b}}return this};t.append=function(a,b){return this.add(a,b,!0)};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a){D(a)&&(a=X(a,this.key));if(this.register[a]){for(var b=0;b<this.h.length&&(this.index[this.h[b]].remove(a,!this.o),!this.m);b++);if(this.I&&!this.m)for(let c in this.l){b=this.l[c];const d=b.indexOf(a);-1!==d&&(1<b.length?b.splice(d,1):delete this.l[c])}this.store&&delete this.store[a];delete this.register[a]}return this};\nt.search=function(a,b,c,d){c||(!b&&D(a)?(c=a,a=\"\"):D(b)&&(c=b,b=0));let e=[],f=[],h,g,k,m,n,w,q=0;if(c)if(c.constructor===Array)k=c,c=null;else{a=c.query||a;k=(h=c.pluck)||c.index||c.field;m=c.tag;g=this.store&&c.enrich;n=\"and\"===c.bool;b=c.limit||b||100;w=c.offset||0;if(m&&(C(m)&&(m=[m]),!a)){for(let l=0,p;l<m.length;l++)if(p=va.call(this,m[l],b,w,g))e[e.length]=p,q++;return q?e:[]}C(k)&&(k=[k])}k||(k=this.h);n=n&&(1<k.length||m&&1<m.length);const r=!d&&(this.o||this.async)&&[];for(let l=0,p,A,B;l<\nk.length;l++){let z;A=k[l];C(A)||(z=A,A=z.field,a=z.query||a,b=z.limit||b,g=z.enrich||g);if(r)r[l]=this.index[A].searchAsync(a,b,z||c);else{d?p=d[l]:p=this.index[A].search(a,b,z||c);B=p&&p.length;if(m&&B){const y=[];let H=0;n&&(y[0]=[p]);for(let W=0,ma,R;W<m.length;W++)if(ma=m[W],B=(R=this.l[ma])&&R.length)H++,y[y.length]=n?[R]:R;H&&(p=n?ja(y,b||100,w||0):ka(p,y),B=p.length)}if(B)f[q]=A,e[q++]=p;else if(n)return[]}}if(r){const l=this;return new Promise(function(p){Promise.all(r).then(function(A){p(l.search(a,\nb,c,A))})})}if(!q)return[];if(h&&(!g||!this.store))return e[0];for(let l=0,p;l<f.length;l++){p=e[l];p.length&&g&&(p=wa.call(this,p));if(h)return p;e[l]={field:f[l],result:p}}return e};function va(a,b,c,d){let e=this.l[a],f=e&&e.length-c;if(f&&0<f){if(f>b||c)e=e.slice(c,c+b);d&&(e=wa.call(this,e));return{tag:a,result:e}}}function wa(a){const b=Array(a.length);for(let c=0,d;c<a.length;c++)d=a[c],b[c]={id:d,doc:this.store[d]};return b}t.contain=function(a){return!!this.register[a]};t.get=function(a){return this.store[a]};\nt.set=function(a,b){this.store[a]=b;return this};t.searchCache=la;t.export=function(a,b,c,d,e,f){let h;\"undefined\"===typeof f&&(h=new Promise(g=>{f=g}));e||(e=0);d||(d=0);if(d<this.h.length){const g=this.h[d],k=this.index[g];b=this;setTimeout(function(){k.export(a,b,e?g:\"\",d,e++,f)||(d++,e=1,b.export(a,b,g,d,e,f))})}else{let g,k;switch(e){case 1:g=\"tag\";k=this.l;c=null;break;case 2:g=\"store\";k=this.store;c=null;break;default:f();return}oa(a,this,c,g,d,e,k,f)}return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"tag\":this.l=b;break;case \"reg\":this.m=!1;this.register=b;for(let d=0,e;d<this.h.length;d++)e=this.index[this.h[d]],e.register=b,e.m=!1;break;case \"store\":this.store=b;break;default:a=a.split(\".\");const c=a[0];a=a[1];c&&a&&this.index[c].import(a,b)}};ia(U.prototype);var ya={encode:xa,F:!1,G:\"\"};const za=[J(\"[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e5]\"),\"a\",J(\"[\\u00e8\\u00e9\\u00ea\\u00eb]\"),\"e\",J(\"[\\u00ec\\u00ed\\u00ee\\u00ef]\"),\"i\",J(\"[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u0151]\"),\"o\",J(\"[\\u00f9\\u00fa\\u00fb\\u00fc\\u0171]\"),\"u\",J(\"[\\u00fd\\u0177\\u00ff]\"),\"y\",J(\"\\u00f1\"),\"n\",J(\"[\\u00e7c]\"),\"k\",J(\"\\u00df\"),\"s\",J(\" & \"),\" and \"];function xa(a){var b=a=\"\"+a;b.normalize&&(b=b.normalize(\"NFD\").replace(ca,\"\"));return F.call(this,b.toLowerCase(),!a.normalize&&za)};var Ba={encode:Aa,F:!1,G:\"strict\"};const Ca=/[^a-z0-9]+/,Da={b:\"p\",v:\"f\",w:\"f\",z:\"s\",x:\"s\",\"\\u00df\":\"s\",d:\"t\",n:\"m\",c:\"k\",g:\"k\",j:\"k\",q:\"k\",i:\"e\",y:\"e\",u:\"o\"};function Aa(a){a=xa.call(this,a).join(\" \");const b=[];if(a){const c=a.split(Ca),d=c.length;for(let e=0,f,h=0;e<d;e++)if((a=c[e])&&(!this.filter||!this.filter[a])){f=a[0];let g=Da[f]||f,k=g;for(let m=1;m<a.length;m++){f=a[m];const n=Da[f]||f;n&&n!==k&&(g+=n,k=n)}b[h++]=g}}return b};var Fa={encode:Ea,F:!1,G:\"\"};const Ga=[J(\"ae\"),\"a\",J(\"oe\"),\"o\",J(\"sh\"),\"s\",J(\"th\"),\"t\",J(\"ph\"),\"f\",J(\"pf\"),\"f\",J(\"(?![aeo])h(?![aeo])\"),\"\",J(\"(?!^[aeo])h(?!^[aeo])\"),\"\"];function Ea(a,b){a&&(a=Aa.call(this,a).join(\" \"),2<a.length&&(a=G(a,Ga)),b||(1<a.length&&(a=da(a)),a&&(a=a.split(\" \"))));return a||[]};var Ia={encode:Ha,F:!1,G:\"\"};const Ja=J(\"(?!\\\\b)[aeo]\");function Ha(a){a&&(a=Ea.call(this,a,!0),1<a.length&&(a=a.replace(Ja,\"\")),1<a.length&&(a=da(a)),a&&(a=a.split(\" \")));return a||[]};K[\"latin:default\"]=fa;K[\"latin:simple\"]=ya;K[\"latin:balance\"]=Ba;K[\"latin:advanced\"]=Fa;K[\"latin:extra\"]=Ia;/* harmony default export */ __webpack_exports__[\"default\"] = ({Index:N,Document:U,Worker:S,registerCharset:function(a,b){K[a]=b},registerLanguage:function(a,b){ha[a]=b}});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mdx/search.mjs":
/*!****************************!*\
  !*** ./src/mdx/search.mjs ***!
  \****************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   search: function() { return /* binding */ search; }\n/* harmony export */ });\n/* harmony import */ var flexsearch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flexsearch */ \"(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js\");\n\nlet sectionIndex = new flexsearch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Document({\n    tokenize: \"full\",\n    document: {\n        id: \"url\",\n        index: \"content\",\n        store: [\n            \"title\",\n            \"pageTitle\"\n        ]\n    },\n    context: {\n        resolution: 9,\n        depth: 2,\n        bidirectional: true\n    }\n});\nlet data = [\n    {\n        \"url\": \"/sdk\",\n        \"sections\": [\n            [\n                \"Why do I need an SDK?\",\n                \"why-do-i-need-an-sdk\",\n                [\n                    \"You may often want to integrate Rebill's payment solution directly into your website. This approach keeps your customers on your domain throughout their transaction process, ensuring a consistent and branded experience.\",\n                    \"This is exactly where Rebill's SDK comes into play. Our SDK offers a comprehensive suite of tools that enables you to use Rebill’s payment experience without requiring your clients to navigate away from your page.\",\n                    \"This integration method fully complies with PCI DSS standards, guaranteeing the safety of customer data. By integrating, you can be confident that customer information is kept secure and that your company complies with all regulations governing the management of payment information.\"\n                ]\n            ],\n            [\n                \"Our solution\",\n                \"our-solution\",\n                [\n                    \"Rebill’s SDK is a purely JavaScript-based solution that manages transactions and facilitates card tokenization for existing clients. This approach makes integrating with your app effortless: Simply insert a script tag into your HTML.\"\n                ]\n            ],\n            [\n                \"Rebill Components\",\n                \"rebill-components\",\n                [\n                    \"Our SDK Checkout is composed of Rebill Components. Each component is a component-based UI solution that allows you to integrate the 100+ payment methods available easily. This feature is called Rebill Components and allows you to embed an iframe, delegating the full responsibility of transaction management to the provided UI.\",\n                    \"By default, this approach renders a prebuilt checkout page to start accepting online payments, which is fully customizable (see customization).\",\n                    \"This prebuilt checkout page integrates by default Rebill's 1-click-checkout functionality. To further details see user login.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/sdk/checkout\",\n        \"sections\": [\n            [\n                \"Checkout\",\n                \"checkout\",\n                [\n                    \"This guide covers the integration and use of our JavaScript SDK for payment\\nprocessing. The SDK complies with PCI DSS standards to ensure security.\",\n                    \"Quickstart checkout\",\n                    \"Create checkout\",\n                    \"Display\",\n                    \"User login\",\n                    \"Submit checkout\",\n                    \"Transaction data\",\n                    \"Styling\",\n                    \"Translations\",\n                    \"Listening events\",\n                    \"Examples\"\n                ]\n            ],\n            [\n                \"Quickstart checkout\",\n                \"quickstart-checkout\",\n                [\n                    \"Learn how to integrate our JavaScript SDK into your web application and start processing payments across Latin America in\\xa05 simple steps.\",\n                    \"Prerequisites\",\n                    \"Ensure JavaScript is enabled in your environment.\",\n                    \"Retrieve your Public Key from the dashboard.\",\n                    \"Step 1: Insert the SDK Script\",\n                    \"To make the JavaScript toolkit available in your app, you must add the following script tag to your HTML.\",\n                    \"Step 2: Initialize the SDK\",\n                    \"Initialize the SDK with your Public Key. This will create a new instance of the SDK tied to your organization.\",\n                    \"Step 3: Create an instance of the checkout\",\n                    \"Create an instance of the checkout with your product or plan id. This initializes all the necessary values for the transaction.\",\n                    \"Step 4: Insert Rebill Components\",\n                    \"In order to use our UI solution approach, simply place the following HTML tag where you want the payment form to appear in your site:\",\n                    \"This div serves as the container where the iframe will be injected, and where the checkout form, payment methods will be rendered.\",\n                    \"Step 5: Mount the iframe\",\n                    \"Finally, you need to specify within the SDK which component ID should be targeted to render the iframe containing the payment methods on your webpage. You can achieve this by connecting it to your initialized SDK using mount method:\",\n                    \"Note: The container ID can be customized. Set your own ID and then pass it through the mount method\",\n                    \"At this point, an iframe containing the form and available payment methods for the given price will be displayed on your page. By default, the full version of the SDK is shown. If you want to customize which components are displayed, refer to the customization section for more details.\",\n                    \"After a successful purchase, the payment responses, along with associated instructions for the chosen payment method, will be displayed within the iframe.\"\n                ]\n            ],\n            [\n                \"Create checkout\",\n                \"create-checkout\",\n                [\n                    \"To initialize a new instance of Rebill checkout, you must use the create method. By default, the only parameter required is the ID of the product or plan intended for payment, but the method supports additional properties to gain control over the checkout flow. The create method is described below.\",\n                    \"| Parameter      | Type   | Required | Description                                                                                                                                                                                                                                                                   |\\n| -------------- | ------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| id           | String | Required | The ID of the product/plan to be purchased.                                                                                                                                                                                                                                   |\\n| currency     | String | Optional | The currency for the transaction. By default, the SDK offers the country of the current client by its IP and uses the proper currency. Otherwise, you can specify the currency. See supported currencies in our helper docs. |\\n| quantity     | Number | Optional | The quantity of the product/service units intended for purchase. By default, it’s set to one item.                                                                                                                                                                            |\\n| discountCode | String | Optional | A discount code to initialize the SDK with a given discount applied. If this value is provided in advance, you can opt to hide the discount code input field that is rendered in the iframe.                                                                                  |\",\n                    \"The create method returns four functions that allow you to interact with the instance of your form created. These methods are:\",\n                    \"| Method    | Description                                                                                                                                                                                                  |\\n| --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| mount   | Async method that renders the iframe and injects it into your HTML. Receives the ID of the container component as a parameter.                                                                               |\\n| display | Defines which components are shown or not inside the iframe. See display.                                                                              |\\n| set     | Communicates with the iframe and sets the necessary data for the transaction. Only necessary if some section is hidden by the display method. See transaction data. |\\n| submit  | Allows you to trigger the submit action from outside the iframe. See the submit method.                                                                           |\\n| reset   | Allows you to trigger the reset checkout flow from outside the iframe. See the reset method.                                                                           |\\n| translations | Allows you to access and override the translations. See translations.                                                                   |\"\n                ]\n            ],\n            [\n                \"Guides\",\n                \"guides\",\n                [\n                    \"This section contains guides to help you get started and learn how to maximize\\nyour experience processing payments with Rebill.\"\n                ]\n            ],\n            [\n                \"Customization\",\n                \"customization\",\n                [\n                    \"By default, you can start transacting with minimum setup with our Rebill Components solution. This approach allows you to fully integrate the whole experience of Rebill’s checkout, without putting any effort into managing responses, validations, and styling.\",\n                    \"However, there is another approach where you gain maximum control over what is rendered inside the iframe and what is managed externally.\",\n                    \"The only components that you must persist inside the iframe are the payment methods and the payment button. All the other fields can be managed externally in your application and simply pass the information to the SDK in order to make the transaction.\"\n                ]\n            ],\n            [\n                \"Display\",\n                \"display\",\n                [\n                    \"In order to follow this approach, the SDK exposes a method called display where you can declare which components you don't want to be shown inside the iframe.\",\n                    \"This are the values sopported as props in order to exclude sections from the iframe\",\n                    \"| Property              | Type    | Required | Default value |\\n| --------------------- | ------- | -------- | ------------- |\\n| userLogin           | Boolean | Optional | true          |\\n| billing             | Boolean | Optional | true          |\\n| customerInformation | Boolean | Optional | true          |\\n| cardholderDetails   | Boolean | Optional | true          |\\n| discountCode        | Boolean | Optional | true          |\\n| checkoutSummary     | Boolean | Optional | true          |\\n| submitButton        | Boolean | Optional | true          |\\n| resetButton         | Boolean | Optional | true          |\",\n                    \"By default, every value is set to true. If an attribute is set to false, the associated section won't be rendered and the management of those fields must be implemented by the integrator.\",\n                    \"Each property is associated with a section and is arranged as follows:\",\n                    \"If you decide to manage all of these parts externally in your own application, you must simply set all the values to false. The following result will then be rendered in the iframe:\",\n                    \"You must set the display options before calling the mount action.\"\n                ]\n            ],\n            [\n                \"Exclude payment methods \",\n                \"exclude-payment-methods\",\n                [\n                    \"With the display method of the SDK, you will also be able to decide which payment methods are shown to your clients for making payments.\",\n                    \"The payment methods are grouped into three main categories: card, cash, and transfer. For example, in Argentina, 'cash' may represent 'PagoFacil', in Colombia 'Efecty', and in Mexico 'Paynet'.\",\n                    \"You can easily exclude one of these categories by passing the excludePaymentMethods property to the display method. This property accepts an array of strings representing the categories you want to exclude. Additionally, you can exclude an individual payment method by sending its name in the excludePaymentMethods array.\",\n                    \"To see the list of every payment method available in each country, refer to our helper docs.\"\n                ]\n            ],\n            [\n                \"User login\",\n                \"user-login\",\n                [\n                    \"To provide a smoother checkout experience for your customers, Rebill's SDK by default integrates 1-click checkout functionality.\",\n                    \"When a customer uses Rebill’s 1-click checkout, they can securely access their billing information and cards without having to re-enter it for every purchase on your website. This feature enhances the user experience by reducing friction during the checkout process, potentially leading to higher conversion rates, improved customer satisfaction, and a more seamless overall shopping experience.\",\n                    \"The checkout flow starts simply by asking for your customer's email. With this information, the SDK will check for an existing account associated with that email. If found, a one-time password (OTP) is sent via email and phone for secure login. Once authenticated, customers can choose from their saved cards, add a new one, or select an alternative payment method, all without re-entering their information. New customers will be prompted to fill in their billing details before completing the purchase.\",\n                    \"How does it work?\",\n                    \"Customer Email: The customer provides their email address.\",\n                    \"Client Verification and OTP: The SDK checks for an existing customer with this email. If found, a one-time password (OTP) is sent via email and phone (customizable from the dashboard).\",\n                    \"Retrieve Saved Cards and Information: After logging in with the OTP, the SDK retrieves all saved cards and information for the customer.\",\n                    \"Checkout Options:\\n◦ Authenticated customers can choose a saved card, add a new one, or select an alternative payment method without entering additional information.\\n◦ Customers can also use “guest mode” to log out and complete the checkout with saved information.\",\n                    \"New Customer: If this is the customer's first purchase, they must fill in their billing details, select a payment method, and complete the checkout.\",\n                    \"In case you want to avoid this functionality, simply set the userLogin property to false using the display method.\",\n                    \"As a result, your checkout experience will not include the login step and the render screen will remain with the complete checkout form.\"\n                ]\n            ],\n            [\n                \"Submit checkout\",\n                \"submit-checkout\",\n                [\n                    \"If you decide not to render the submit button inside the iframe using the display method, it becomes the integrator's responsibility to submit the payment, as it will not be triggered from the UI.\",\n                    \"To control this flow, you must use the submit async method. Here's an example:\",\n                    \"Please note that if the submit button is rendered as part of Rebill's components, handling this logic is not necessary and you can skip this section.\",\n                    \"There are two possible options for capturing the event response. The simplest scenario is to listen to the triggered events with the on method and attach a callback function (see listening to events).\",\n                    \"However, there is another approach where you can handle the response directly as the returned value from the async submit method.\",\n                    \"The response structure is described below:\\n| Property | Type | Description | Is optional |\\n| ----------- | ---------------------------------------------------------------------------- | ------------------------------------------------------------ | ---------- |\\n| status | 'approved' | 'error' | 'rejected' | The status of the processed transaction. | - |\\n| paymentType | 'card' | 'alternative' | The payment method type in which the transaction was made. | - |\\n| data | Response<Type> | The response data associated with the processed transaction. | - |\",\n                    \"The response <Type> can take different values depending on whether the checkout was successful with a card or alternative payment method, or if it resulted in an error. These structures are described below:\"\n                ]\n            ],\n            [\n                \"Approved checkout\",\n                \"approved-checkout\",\n                [\n                    \"Card\",\n                    \"For a checkout made with a card payment method:\",\n                    \"| Parameter                | Type   | Description                                                                                                             | Is optional |\\n| ------------------------ | ------ | ----------------------------------------------------------------------------------------------------------------------- | ----------- |\\n| payment.id             | string | Unique identifier for the payment.                                                                                      | -           |\\n| payment.status         | string | Status of the payment.                                                                                                  | -           |\\n| payment.amount         | number | Amount of the payment.                                                                                                  | -           |\\n| payment.currency       | string | Currency of the payment.                                                                                                | -           |\\n| payment.createdAt      | string | Timestamp when the payment was created.                                                                                 | -           |\\n| payment.subscriptionId | string | The ID associated with the paid subscription. This attribute will only be returned if the purchase is linked to a plan. | Optional    |\\n| customer.id            | string | Unique identifier for the customer.                                                                                     | -           |\\n| customer.email         | string | Email address of the customer.                                                                                          | -           |\\n| card.id                | string | Unique identifier for the card.                                                                                         | -           |\\n| card.createdAt         | string | Timestamp when the card was created.                                                                                    | -           |\\n| card.lastFour          | string | Last four digits of the card number.                                                                                    | -           |\\n| card.expiration.month  | number | Expiration month of the card.                                                                                           | -           |\\n| card.expiration.year   | number | Expiration year of the card.                                                                                            | -           |\",\n                    \"Alternative payment method\",\n                    \"For a checkout made with a cash payment method:\",\n                    \"| Parameter                  | Type   | Description                          | Is optinal |\\n| -------------------------- | ------ | ------------------------------------ | ---------- |\\n| customer.email           | string | Email address of the customer.       | -          |\\n| slip.code.id             | string | Unique identifier for the slip code. | -          |\\n| slip.code.expirationDate | string | Expiration date of the slip code.    | -          |\",\n                    \"For a checkout made with a transfer payment method:\",\n                    \"| Parameter              | Type   | Description                                      | Is optional |\\n| ---------------------- | ------ | ------------------------------------------------ | ----------- |\\n| customer.email       | string | Email address of the customer.                   | -           |\\n| slip.code.image      | string | Base64 encoded image of the slip code.           | Optional    |\\n| slip.code.id         | string | Unique identifier for the slip code.             | Optional    |\\n| slip.code.redirectTo | string | URL to redirect to after payment.                | Optional    |\\n| slip.code.cieNumber  | string | CIE number for the transaction.                  | Optional    |\\n| slip.code.clabe      | string | CLABE number for the transaction.                | Optional    |\\n| slip.code.reference  | string | Reference number for the transaction.            | Optional    |\\n| slip.code.redirectTo | string | URL to redirect to complete the payment process. | Optional    |\"\n                ]\n            ],\n            [\n                \"Rejected checkout\",\n                \"rejected-checkout\",\n                [\n                    \"In case the transaction resolves as a rejected payment.\",\n                    \"Card\",\n                    \"For a checkout made with a card payment method:\",\n                    \"| Parameter               | Type   | Description                             | Is optional |\\n| ----------------------- | ------ | --------------------------------------- | ----------- |\\n| payment.id            | string | Unique identifier for the payment.      | -           |\\n| payment.status        | string | Status of the payment.                  | -           |\\n| payment.amount        | number | Amount of the payment.                  | -           |\\n| payment.currency      | string | Currency of the payment.                | -           |\\n| payment.createdAt     | string | Timestamp when the payment was created. | -           |\\n| customer.id           | string | Unique identifier for the customer.     | -           |\\n| customer.email        | string | Email address of the customer.          | -           |\\n| card.id               | string | Unique identifier for the card.         | -           |\\n| card.createdAt        | string | Timestamp when the card was created.    | -           |\\n| card.lastFour         | string | Last four digits of the card number.    | -           |\\n| card.expiration.month | number | Expiration month of the card.           | -           |\\n| card.expiration.year  | number | Expiration year of the card.            | -           |\",\n                    \"Alternative payment method\",\n                    \"Transactions made with an alternative payment method do not have an associated rejected status. Since there are no intermediate validation steps, payments in this mode only respond with a success or error status.\"\n                ]\n            ],\n            [\n                \"Checkout error\",\n                \"checkout-error\",\n                [\n                    \"When the payment attempt fails and is not generated, a response with the following structure will be returned:\",\n                    \"| Parameter | Type   | Description                                               | Is optional |\\n| --------- | ------ | --------------------------------------------------------- | ----------- |\\n| message | string | A descriptive message explaining the error that occurred. | -           |\"\n                ]\n            ],\n            [\n                \"Reset checkout flow\",\n                \"reset-checkout-flow\",\n                [\n                    \"In case the transaction ends up in an error, a rejected payment even if you want to enable your customer the ability to change payment method after already selecting any, you can easily achieve this by the reset button that displays at the end of the checkout flow.\",\n                    \"With this button, you could reset the checkout flow and give your customers the ability to choose a different payment method or card.\",\n                    \"Is important to notice that this button does not reset the current billing o customer information, it only resets the flow enabling your customer to opt for a different payment option.\",\n                    \"You could opt for not rendering this reset button by using the display method.\",\n                    \"If you decide to follow this approach, it becomes the integrator's responsibility to reset the flow, as it will not be triggered from the UI.\",\n                    \"To control this flow, you must use the reset method. Here's an example:\",\n                    \"Please note that if the reset button is rendered as part of Rebill's components, handling this logic is not necessary and you can skip this section.\"\n                ]\n            ],\n            [\n                \"Transaction data\",\n                \"transaction-data\",\n                [\n                    \"At this stage, if you've chosen to hide certain components within the iframe, the responsibility for configuring these values falls within your integration logic. Rebill’s SDK provides a set method that you must use to communicate with the iframe and set the necessary data.\",\n                    \"The structure attached to this method is described below.\",\n                    \"Customer Information\",\n                    \"| Property                  | Type   | Description                                                                                                                                                                                                                                                                                                                   |\\n| ------------------------- | ------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| firstName               | string | The first name of the customer.                                                                                                                                                                                                                                                                                               |\\n| lastName                | string | The last name or surname of the customer.                                                                                                                                                                                                                                                                                     |\\n| email                   | string | The customer's email address, used for communication and identification purposes.                                                                                                                                                                                                                                             |\\n| identification.type     | string | The type attribute of the identification property can take different values depending on the country. To obtain the allowed values, see our helper docs.                                                                                                                 |\\n| identification.id       | string | The unique identification number assigned to the customer, based on the selected type of identification.                                                                                                                                                                                                                    |\\n| phoneNumber.countryCode | string | The countryCode attribute of the phone property can be obtained by using Rebill SDK helpers to ensure it matches the country's dialing code.                                                                                                                                                                              |\\n| phoneNumber.number      | string | The local phone number of the customer, excluding the country code.                                                                                                                                                                                                                                                           |\\n| billing.line1           | string | The first line of the customer's billing address, usually containing the street address.                                                                                                                                                                                                                                      |\\n| billing.line2           | string | The second line of the billing address, often used for apartment, suite, or additional address information.                                                                                                                                                                                                                   |\\n| billing.city            | string | The city where the customer resides.                                                                                                                                                                                                                                                                                          |\\n| billing.zipCode         | string | The postal or ZIP code associated with the customer's billing address.                                                                                                                                                                                                                                                        |\\n| billing.state           | string | The state, province, or region of the customer's billing address.                                                                                                                                                                                                                                                             |\\n| billing.country         | string | The country attribute of the billingAddress property must be a valid isoCountryCode. Additionally, state attribute should be obtained based on the isoCountryCode of the completed country property. In order to obtain the allowed values, see our helper docs. |\\n| cardHolderDetails.name  | string | The full name of the cardholder as it appears on the payment card.                                                                                                                                                                                                                                                            |\",\n                    \"Notice that every value received in the object is optional, but it becomes required when its corresponding section of the iframe UI is decided not to be shown. In such cases, it must be passed as a property within the set method.\",\n                    \"The required fields for the payload differ by country. The list of parameters provided below includes only the required fields for each country.\",\n                    \"View all possible parameters for checkout with card.\",\n                    \"View all possible parameters for checkout with cash.\",\n                    \"View all possible parameters for checkout with transfer.\",\n                    \"Metadata\",\n                    \"| Property               | Type   | Required |\\n| ---------------------- | ------ | -------- |\\n| paymentMetadata      | object | Optional |\\n| subscriptionMetadata | object | Optional |\",\n                    \"The payment metadata will be associated with the payment, while the subscription metadata will be linked to the resulting subscription.\"\n                ]\n            ],\n            [\n                \"Styling\",\n                \"styling\",\n                [\n                    \"To fully customize the appearance of your components, you can use the custom method. This method allows you to tailor the look and feel of the SDK components to match your application's design seamlessly.\",\n                    \"| Property | Type | Required |\\n| --- | --- | --- |\\n| css | String | Required |\",\n                    \"The method receives a css property where you can insert a string containing all the CSS you want to attach to your SDK instance. Every component of the rendered iframe has an specific id witch you can inspect in order to style almos any component\",\n                    \"Here is an example of the implementation:\"\n                ]\n            ],\n            [\n                \"Optional fields \",\n                \"optional-fields\",\n                [\n                    \"To hide all optional fields from your checkout sdk, you can apply the following custom CSS:\"\n                ]\n            ],\n            [\n                \"Translations\",\n                \"translations\",\n                [\n                    \"Rebill's SDK supports multiple languages to enhance user experience and accessibility. By default, the SDK can handle three languages: English, Spanish, and Portuguese. It automatically detects and adjusts the language based on the user's location, similar to how it manages currency, ensuring all displayed text is appropriately localized.\",\n                    \"In addition to automatic language detection, our SDK offers flexibility in text customization through the translations method. You may use this feature to customize the texts to better reflect your brand communication in each language. Texts that are not explicitly overridden will retain their default translations.\",\n                    \"Here is an example of how to use the translations method to customize text for each supported language. The only 3 languages supported are English (EN), Spanish (ES) and Portuguese (PT).\",\n                    \"The text options that support translations follow the structure of this JSON file. The translations support a key-value structure, so to write your custom texts, just find the key you want to override within the JSON document and provide your new text. The same structure is repeated for Spanish and Portuguese translations, but the keys remain in English.\",\n                    \"If you want to prevent the SDK from setting the language based on the user's location and instead display it in only one predefined language (en, es, or pt), you can set a fixed language for the rendered components. Simply add a language property to the translation method.\",\n                    \"You must set the translations before calling the mount action.\"\n                ]\n            ],\n            [\n                \"Listening events\",\n                \"listening-events\",\n                [\n                    \"This section explains how to configure callbacks that will be triggered by certain events generated internally by the SDK. By utilizing these functions, you can handle successful operations and errors with your custom logic. You can attach your functions to these events using the on method, passing as arguments the event type you want to listen to and the handler function that will receive the event.\",\n                    \"Method parameters\",\n                    \"| Property    | Type                                                | Description                                                                                                                           | Required |\\n| ----------- | --------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------- | -------- |\\n| eventType | 'approved' | 'error' | 'rejected' | 'formStatus' | The name of the event. Required                                                                                                       | Required |\\n| handler   | function(e) => void                                 | The callback function that will be called after the event is triggered. It receives the value returned from the event as a parameter. | Required |\",\n                    \"Event response\",\n                    \"The event response structure is described below:\\n| Property | Type | Description | Is optional |\\n| ----------- | ---------------------------------------------------------------------------- | ------------------------------------------------------------ | ---------- |\\n| paymentType | 'card' | 'alternative' | The payment method type in which the transaction was made. | - |\\n| data | Response<Type> | The response data associated with the processed transaction. | - |\",\n                    \"The response <Type> can take different values depending on whether the checkout was successful with a card or alternative payment method, or if it resulted in an error. These structures are described below:\"\n                ]\n            ],\n            [\n                \"Approved event\",\n                \"approved-event\",\n                [\n                    \"When the approved event is called, it passes an event object to the callback function.\",\n                    \"The response varies depending on whether the checkout was made using a card or other alternative payment method options. These structures are described below.\",\n                    \"Card checkout\",\n                    \"| Parameter                | Type   | Description                                                                                                             | Is optional |\\n| ------------------------ | ------ | ----------------------------------------------------------------------------------------------------------------------- | ----------- |\\n| payment.id             | string | Unique identifier for the payment.                                                                                      | -           |\\n| payment.status         | string | Status of the payment.                                                                                                  | -           |\\n| payment.amount         | number | Amount of the payment.                                                                                                  | -           |\\n| payment.currency       | string | Currency of the payment.                                                                                                | -           |\\n| payment.createdAt      | string | Timestamp when the payment was created.                                                                                 | -           |\\n| payment.subscriptionId | string | The ID associated with the paid subscription. This attribute will only be returned if the purchase is linked to a plan. | Optional    |\\n| customer.id            | string | Unique identifier for the customer.                                                                                     | -           |\\n| customer.email         | string | Email address of the customer.                                                                                          | -           |\\n| card.id                | string | Unique identifier for the card.                                                                                         | -           |\\n| card.createdAt         | string | Timestamp when the card was created.                                                                                    | -           |\\n| card.lastFour          | string | Last four digits of the card number.                                                                                    | -           |\\n| card.expiration.month  | number | Expiration month of the card.                                                                                           | -           |\\n| card.expiration.year   | number | Expiration year of the card.                                                                                            | -           |\",\n                    \"Alternativa checkout\",\n                    \"For a checkout made with a cash payment method:\",\n                    \"| Parameter                  | Type   | Description                          | Is optinal |\\n| -------------------------- | ------ | ------------------------------------ | ---------- |\\n| customer.email           | string | Email address of the customer.       | -          |\\n| slip.code.id             | string | Unique identifier for the slip code. | -          |\\n| slip.code.expirationDate | string | Expiration date of the slip code.    | -          |\",\n                    \"For a checkout made with a transfer payment method:\",\n                    \"| Parameter              | Type   | Description                                      | Is optional |\\n| ---------------------- | ------ | ------------------------------------------------ | ----------- |\\n| customer.email       | string | Email address of the customer                    | -           |\\n| slip.code.image      | string | Base64 encoded image of the slip code            | -           |\\n| slip.code.id         | string | Unique identifier for the slip code              | Optional    |\\n| slip.code.redirectTo | string | URL to redirect to after payment.                | Optional    |\\n| slip.code.cieNumber  | string | CIE number for the transaction.                  | Optional    |\\n| slip.code.clabe      | string | CLABE number for the transaction.                | Optional    |\\n| slip.code.reference  | string | Reference number for the transaction.            | Optional    |\\n| slip.code.redirectTo | string | URL to redirect to complete the payment process. | Optional    |\"\n                ]\n            ],\n            [\n                \"Rejected event\",\n                \"rejected-event\",\n                [\n                    \"When the rejected event is called, it passes an event object to the callback function.\",\n                    \"The structure of the response varies depending on whether the checkout was made using a card or other alternative payment method options. These structures are described below.\",\n                    \"Card Checkout\",\n                    \"| Parameter               | Type   | Description                             | Is optional |\\n| ----------------------- | ------ | --------------------------------------- | ----------- |\\n| payment.id            | string | Unique identifier for the payment.      | -           |\\n| payment.status        | string | Status of the payment.                  | -           |\\n| payment.amount        | number | Amount of the payment.                  | -           |\\n| payment.currency      | string | Currency of the payment.                | -           |\\n| payment.createdAt     | string | Timestamp when the payment was created. | -           |\\n| customer.id           | string | Unique identifier for the customer.     | -           |\\n| customer.email        | string | Email address of the customer.          | -           |\\n| card.id               | string | Unique identifier for the card.         | -           |\\n| card.createdAt        | string | Timestamp when the card was created.    | -           |\\n| card.lastFour         | string | Last four digits of the card number.    | -           |\\n| card.expiration.month | number | Expiration month of the card.           | -           |\\n| card.expiration.year  | number | Expiration year of the card.            | -           |\",\n                    \"Alternative Checkout\",\n                    \"Payments associated with an alternative payment method do not have an associated rejected event. Since there are no intermediate validation steps, payments in this mode only trigger success or error states.\"\n                ]\n            ],\n            [\n                \"Error event \",\n                \"error-event\",\n                [\n                    \"When the error event is called, it passes an event object to the callback function.\",\n                    \"This event is associated with a scenario where the payment attempt or initialization has failed. The structure is described below.\",\n                    \"| Parameter | Type   | Description                                               | Is optional |\\n| --------- | ------ | --------------------------------------------------------- | ----------- |\\n| message | string | A descriptive message explaining the error that occurred. | -           |\\n| paymentType | string | The payment method type related to the error. | Present only if the error is related to a specific payment method. Omitted for initialization errors. |\\n| country | string | The country that is out of coverage and caused the error. | Present only if the error is related to country coverage restrictions.   |\",\n                    \"Error example related to the transaction and a specific payment method:\",\n                    \"Error example related to an out-of-coverage country:\",\n                    \"Here is an example of the implementation:\"\n                ]\n            ],\n            [\n                \"Form status event \",\n                \"form-status-event\",\n                [\n                    \"When the formStatus event is called, it passes an event object to the callback function. This structure is described below.\",\n                    \"This event provides access to the form data validity and its current errors. The structure is described below.\",\n                    \"| Parameter | Type                 | Description                                                     | Is optional |\\n| --------- | -------------------- | --------------------------------------------------------------- | ----------- |\\n| isValid | boolean              | A boolean indicating the current valid status of the form data. | -           |\\n| errors  | { key: string, … } | An object with the errored fields in the form.                  | -           |\",\n                    \"Here is an example of the implementation:\"\n                ]\n            ],\n            [\n                \"Examples\",\n                \"examples\",\n                [\n                    \"To help you get started quickly, we have created an example repository on GitHub\\nthat demonstrates both scenarios: processing transactions and card tokenization\\nwith Rebill's SDK. This repository includes deployment setups for both use\\ncases.\",\n                    \"Github repository\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/sdk/test-payment-methods\",\n        \"sections\": [\n            [\n                \"Test Payment Methods\",\n                \"test-payment-methods\",\n                [\n                    \"Use the corresponding payment method for the country and currency you wish to try out. Simulate payments to test your integration. \",\n                    \"To make sure your integrations works correctly, simulate transactions without moving real money with the values listed below. Test cards let you simulate several scenarios, depending on the country and the result you wish to be returned by the transaction request.\",\n                    \"You can test payments through our no-code, highly customizable Checkout Landing. For doing this, you'll first need to have at least one Product and created. You can also test payments directly through API calls. Take a look at our API reference here.\"\n                ]\n            ],\n            [\n                \"Successful payment\",\n                \"successful-payment\",\n                [\n                    \"| Brand      | Card Number         | CVV | Expiry date |\\n| :--------- | :------------------ | :-- | :---------- |\\n| Mastercard | 5299 9199 9999 9999 | 123 | 12/99       |\"\n                ]\n            ],\n            [\n                \"Rejected payments\",\n                \"rejected-payments\",\n                [\n                    \"| Brand      | Card Number         | CVV | Expiry date |\\n| :--------- | :------------------ | :-- | :---------- |\\n| Mastercard | 4984 9199 9999 1234 | 123 | 12/29       |\"\n                ]\n            ],\n            [\n                \"PIX\",\n                \"pix\",\n                [\n                    \"A PIX payment in sandbox mode will be automatically approved in the following 30 minutes after the purchase was generated\",\n                    \"For a successful payment in BRL, the following validation requirements must be met: Valid Zip Code and Valid CPF\",\n                    \"You can generate a valid CPF here. Provide a valid address that matches the state of the CPF.\"\n                ]\n            ],\n            [\n                \"Nequi\",\n                \"nequi\",\n                [\n                    \"A payment with Nequi in sandbox mode must be created with an specific amount. Depending on the amount, the payment will be approved, not found or canceled:\",\n                    \"Approved: If the amount is between 0 and 99.999 COP or more than 200.000 COP\",\n                    \"Not found: If the amount is between 150.000 and 200.000 COP\",\n                    \"Canceled: If the amount is between 100.000 and 150.000 COP\",\n                    \"Always check that you are in sandbox mode when testing these payment methods.\"\n                ]\n            ]\n        ]\n    }\n];\nfor (let { url, sections } of data){\n    for (let [title, hash, content] of sections){\n        sectionIndex.add({\n            url: url + (hash ? \"#\" + hash : \"\"),\n            title,\n            content: [\n                title,\n                ...content\n            ].join(\"\\n\"),\n            pageTitle: hash ? sections[0][0] : undefined\n        });\n    }\n}\nfunction search(query) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    let result = sectionIndex.search(query, {\n        ...options,\n        enrich: true\n    });\n    if (result.length === 0) {\n        return [];\n    }\n    return result[0].result.map((item)=>({\n            url: item.id,\n            title: item.doc.title,\n            pageTitle: item.doc.pageTitle\n        }));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mdx/search.mjs\n"));

/***/ })

}]);